const lambda=Object.freeze({id:e=>e,flip:a=>l=>e=>a(e)(l),first:l=>e=>l,second:e=>e=>e,index:(e,l)=>l,even:e=>Boolean(1&~e),odd:e=>!even(e),add:l=>e=>l+e,incr:e=>e+1,decr:e=>e-1,smaller:l=>e=>l<e,greater:l=>e=>e<l,head:e=>e[0]??!1,tail:e=>e.slice(1),last:e=>e[e.length-1]??!1,init:e=>e.slice(0,e.length-1),halve:e=>{var l=Math.floor((e.length-(even(e.length)?1:0))/2);return[e.slice(0,l),e.slice(-l)]},middle:e=>e.slice(1,-1),reverse:e=>e.map((e,l,a)=>a[a.length-1-l]),push:l=>e=>((c=[...e]).push(l),c),range:l=>e=>[..."-".repeat(e-l+1)].map((e,l)=>l).map(e=>l+e),take:l=>e=>e.slice(0,l),drop:l=>e=>e.slice(l,e.length-1),zip:e=>a=>e.map((e,l)=>[e,a[l]]),sum:e=>e.reduce((e,l)=>e+l,0),min:e=>e.reduce((e,l)=>l<e?l:e,Number.MAX_SAFE_INTEGER),max:e=>e.reduce((e,l)=>e<l?l:e,Number.MIN_SAFE_INTEGER),Integer:e=>~~e,mod:l=>e=>l<e?l:mod(l-e,e)}),Î»=lambda;