class Grid{constructor(t,i,r){this.rows=t,this.cols=i,this.grid=r||this.init(t,i)}init(t,i){return[..."0".repeat(t)].map(()=>[..."0".repeat(i)].map(()=>new Cell))}map2D(s){return new Grid(this.rows,this.cols,this.grid.map((t,r)=>t.map((t,i)=>s({row:r,col:i},t))))}neighbors(r,s){return[[-1,-1],[-1,0],[-1,1],[0,1],[1,1],[1,0],[1,-1],[0,-1],[-1,-1]].map(([t,i])=>[r+t===-1?this.rows-1:(r+t)%this.rows,s+i===-1?this.cols-1:(s+i)%this.cols]).map(([t,i])=>this.grid[t][i])}randomize(){return this.map2D(()=>new Cell(Random.boolean()))}transition(){return this.map2D(({row:t,col:i},r)=>r.transition(this.neighbors(t,i)))}draw(){var t=this.grid.map(t=>`<div>${t.map(t=>t.show()).join("")}</div>`).join("");$("#grid").css("height",5*this.rows+"px").css("width",5*this.cols+"px").empty().append(t)}}class Cell{constructor(t=!1,i=0){this.alive=t,this.age=i}transition(t){t=t.filter(t=>t.alive),t=this.alive?1<t.length&&t.length<=3:3===t.length;return new Cell(t,this.age+1)}show(){return`<div class="cell ${this.alive?"alive":"dead"}"></div>`}}let grid;$("#startOrNext").on("click",function(){"Start"===$(this).text()?(grid=new Grid(100,100).randomize(),$(this).text("Next")):grid=grid.transition(),grid.draw()}),setInterval(()=>$("#startOrNext").trigger("click"),1500);